name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: |
          commons/package-lock.json
          vitest-api-tests/package-lock.json

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Install dependencies (commons)
      run: |
        cd commons
        npm ci

    - name: Run commons tests
      run: |
        cd commons
        npm test

    - name: Restore .NET dependencies
      run: |
        cd UniverseService
        dotnet restore

    - name: Build .NET service
      run: |
        cd UniverseService
        dotnet build --no-restore -c Release

    - name: Run .NET unit tests
      run: |
        cd UniverseService.Tests
        dotnet test --no-build --verbosity normal

    - name: Build and start Universe Service
      run: |
        cd UniverseService
        docker compose build
        docker compose up -d
        # Wait for services to be healthy
        timeout 120 bash -c 'until docker compose ps | grep -q "healthy"; do sleep 5; done'

    - name: Install dependencies (vitest tests)
      run: |
        cd vitest-api-tests
        npm ci

    - name: Run Vitest API tests
      run: |
        cd vitest-api-tests
        npm test

    - name: Install dependencies (playwright tests)
      run: |
        cd playwright-api-tests
        npm install
        npx playwright install

    - name: Run Playwright API tests
      run: |
        cd playwright-api-tests
        npx playwright test

    - name: Stop Universe Service
      if: always()
      run: |
        cd UniverseService
        docker compose down

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker images
      run: |
        cd UniverseService
        docker compose build
        docker tag universeservice-universe-api ${{ secrets.DOCKER_HUB_USERNAME }}/universe-api:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/universe-api:latest